// Generated by view binder compiler. Do not edit!
package com.worksy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.google.android.material.textview.MaterialTextView;
import com.worksy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentJobSeekerHomeBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextInputEditText editTextSearch;

  @NonNull
  public final LinearLayout layoutEmpty;

  @NonNull
  public final RecyclerView recyclerViewJobs;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final TextInputLayout textInputLayoutSearch;

  @NonNull
  public final MaterialTextView textViewUserName;

  @NonNull
  public final MaterialTextView textViewWelcome;

  @NonNull
  public final MaterialToolbar toolbar;

  private FragmentJobSeekerHomeBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TextInputEditText editTextSearch, @NonNull LinearLayout layoutEmpty,
      @NonNull RecyclerView recyclerViewJobs, @NonNull SwipeRefreshLayout swipeRefreshLayout,
      @NonNull TextInputLayout textInputLayoutSearch, @NonNull MaterialTextView textViewUserName,
      @NonNull MaterialTextView textViewWelcome, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.editTextSearch = editTextSearch;
    this.layoutEmpty = layoutEmpty;
    this.recyclerViewJobs = recyclerViewJobs;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.textInputLayoutSearch = textInputLayoutSearch;
    this.textViewUserName = textViewUserName;
    this.textViewWelcome = textViewWelcome;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentJobSeekerHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentJobSeekerHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_job_seeker_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentJobSeekerHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editTextSearch;
      TextInputEditText editTextSearch = ViewBindings.findChildViewById(rootView, id);
      if (editTextSearch == null) {
        break missingId;
      }

      id = R.id.layoutEmpty;
      LinearLayout layoutEmpty = ViewBindings.findChildViewById(rootView, id);
      if (layoutEmpty == null) {
        break missingId;
      }

      id = R.id.recyclerViewJobs;
      RecyclerView recyclerViewJobs = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewJobs == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.textInputLayoutSearch;
      TextInputLayout textInputLayoutSearch = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutSearch == null) {
        break missingId;
      }

      id = R.id.textViewUserName;
      MaterialTextView textViewUserName = ViewBindings.findChildViewById(rootView, id);
      if (textViewUserName == null) {
        break missingId;
      }

      id = R.id.textViewWelcome;
      MaterialTextView textViewWelcome = ViewBindings.findChildViewById(rootView, id);
      if (textViewWelcome == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentJobSeekerHomeBinding((CoordinatorLayout) rootView, editTextSearch,
          layoutEmpty, recyclerViewJobs, swipeRefreshLayout, textInputLayoutSearch,
          textViewUserName, textViewWelcome, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
