// Generated by view binder compiler. Do not edit!
package com.worksy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.worksy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityJobSeekerMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout achievementsButton;

  @NonNull
  public final ImageView achievementsButtonImage;

  @NonNull
  public final TextView achievementsButtonText;

  @NonNull
  public final LinearLayout assistantBotButton;

  @NonNull
  public final ImageView assistantBotButtonImage;

  @NonNull
  public final TextView assistantBotButtonText;

  @NonNull
  public final CardView bottomLeftGridCard;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final CardView bottomRightGridCard;

  @NonNull
  public final TextView careerResourcesTitle;

  @NonNull
  public final LinearLayout jobHistoryButton;

  @NonNull
  public final ImageView jobHistoryButtonImage;

  @NonNull
  public final TextView jobHistoryButtonText;

  @NonNull
  public final LinearLayout jobStrategiesButton;

  @NonNull
  public final CardView quickActionsCard;

  @NonNull
  public final TextView quickActionsTitle;

  @NonNull
  public final CardView topLeftGridCard;

  @NonNull
  public final CardView topRightGridCard;

  @NonNull
  public final LinearLayout uploadResumeButton;

  @NonNull
  public final ImageView uploadResumeButtonImage;

  @NonNull
  public final TextView uploadResumeButtonText;

  private ActivityJobSeekerMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout achievementsButton, @NonNull ImageView achievementsButtonImage,
      @NonNull TextView achievementsButtonText, @NonNull LinearLayout assistantBotButton,
      @NonNull ImageView assistantBotButtonImage, @NonNull TextView assistantBotButtonText,
      @NonNull CardView bottomLeftGridCard, @NonNull BottomNavigationView bottomNavigation,
      @NonNull CardView bottomRightGridCard, @NonNull TextView careerResourcesTitle,
      @NonNull LinearLayout jobHistoryButton, @NonNull ImageView jobHistoryButtonImage,
      @NonNull TextView jobHistoryButtonText, @NonNull LinearLayout jobStrategiesButton,
      @NonNull CardView quickActionsCard, @NonNull TextView quickActionsTitle,
      @NonNull CardView topLeftGridCard, @NonNull CardView topRightGridCard,
      @NonNull LinearLayout uploadResumeButton, @NonNull ImageView uploadResumeButtonImage,
      @NonNull TextView uploadResumeButtonText) {
    this.rootView = rootView;
    this.achievementsButton = achievementsButton;
    this.achievementsButtonImage = achievementsButtonImage;
    this.achievementsButtonText = achievementsButtonText;
    this.assistantBotButton = assistantBotButton;
    this.assistantBotButtonImage = assistantBotButtonImage;
    this.assistantBotButtonText = assistantBotButtonText;
    this.bottomLeftGridCard = bottomLeftGridCard;
    this.bottomNavigation = bottomNavigation;
    this.bottomRightGridCard = bottomRightGridCard;
    this.careerResourcesTitle = careerResourcesTitle;
    this.jobHistoryButton = jobHistoryButton;
    this.jobHistoryButtonImage = jobHistoryButtonImage;
    this.jobHistoryButtonText = jobHistoryButtonText;
    this.jobStrategiesButton = jobStrategiesButton;
    this.quickActionsCard = quickActionsCard;
    this.quickActionsTitle = quickActionsTitle;
    this.topLeftGridCard = topLeftGridCard;
    this.topRightGridCard = topRightGridCard;
    this.uploadResumeButton = uploadResumeButton;
    this.uploadResumeButtonImage = uploadResumeButtonImage;
    this.uploadResumeButtonText = uploadResumeButtonText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityJobSeekerMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityJobSeekerMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_job_seeker_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityJobSeekerMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.achievements_button;
      LinearLayout achievementsButton = ViewBindings.findChildViewById(rootView, id);
      if (achievementsButton == null) {
        break missingId;
      }

      id = R.id.achievements_button_image;
      ImageView achievementsButtonImage = ViewBindings.findChildViewById(rootView, id);
      if (achievementsButtonImage == null) {
        break missingId;
      }

      id = R.id.achievements_button_text;
      TextView achievementsButtonText = ViewBindings.findChildViewById(rootView, id);
      if (achievementsButtonText == null) {
        break missingId;
      }

      id = R.id.assistant_bot_button;
      LinearLayout assistantBotButton = ViewBindings.findChildViewById(rootView, id);
      if (assistantBotButton == null) {
        break missingId;
      }

      id = R.id.assistant_bot_button_image;
      ImageView assistantBotButtonImage = ViewBindings.findChildViewById(rootView, id);
      if (assistantBotButtonImage == null) {
        break missingId;
      }

      id = R.id.assistant_bot_button_text;
      TextView assistantBotButtonText = ViewBindings.findChildViewById(rootView, id);
      if (assistantBotButtonText == null) {
        break missingId;
      }

      id = R.id.bottomLeftGridCard;
      CardView bottomLeftGridCard = ViewBindings.findChildViewById(rootView, id);
      if (bottomLeftGridCard == null) {
        break missingId;
      }

      id = R.id.bottomNavigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.bottomRightGridCard;
      CardView bottomRightGridCard = ViewBindings.findChildViewById(rootView, id);
      if (bottomRightGridCard == null) {
        break missingId;
      }

      id = R.id.careerResourcesTitle;
      TextView careerResourcesTitle = ViewBindings.findChildViewById(rootView, id);
      if (careerResourcesTitle == null) {
        break missingId;
      }

      id = R.id.job_history_button;
      LinearLayout jobHistoryButton = ViewBindings.findChildViewById(rootView, id);
      if (jobHistoryButton == null) {
        break missingId;
      }

      id = R.id.job_history_button_image;
      ImageView jobHistoryButtonImage = ViewBindings.findChildViewById(rootView, id);
      if (jobHistoryButtonImage == null) {
        break missingId;
      }

      id = R.id.job_history_button_text;
      TextView jobHistoryButtonText = ViewBindings.findChildViewById(rootView, id);
      if (jobHistoryButtonText == null) {
        break missingId;
      }

      id = R.id.job_strategies_button;
      LinearLayout jobStrategiesButton = ViewBindings.findChildViewById(rootView, id);
      if (jobStrategiesButton == null) {
        break missingId;
      }

      id = R.id.quickActionsCard;
      CardView quickActionsCard = ViewBindings.findChildViewById(rootView, id);
      if (quickActionsCard == null) {
        break missingId;
      }

      id = R.id.quickActionsTitle;
      TextView quickActionsTitle = ViewBindings.findChildViewById(rootView, id);
      if (quickActionsTitle == null) {
        break missingId;
      }

      id = R.id.topLeftGridCard;
      CardView topLeftGridCard = ViewBindings.findChildViewById(rootView, id);
      if (topLeftGridCard == null) {
        break missingId;
      }

      id = R.id.topRightGridCard;
      CardView topRightGridCard = ViewBindings.findChildViewById(rootView, id);
      if (topRightGridCard == null) {
        break missingId;
      }

      id = R.id.upload_resume_button;
      LinearLayout uploadResumeButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadResumeButton == null) {
        break missingId;
      }

      id = R.id.upload_resume_button_image;
      ImageView uploadResumeButtonImage = ViewBindings.findChildViewById(rootView, id);
      if (uploadResumeButtonImage == null) {
        break missingId;
      }

      id = R.id.upload_resume_button_text;
      TextView uploadResumeButtonText = ViewBindings.findChildViewById(rootView, id);
      if (uploadResumeButtonText == null) {
        break missingId;
      }

      return new ActivityJobSeekerMainBinding((ConstraintLayout) rootView, achievementsButton,
          achievementsButtonImage, achievementsButtonText, assistantBotButton,
          assistantBotButtonImage, assistantBotButtonText, bottomLeftGridCard, bottomNavigation,
          bottomRightGridCard, careerResourcesTitle, jobHistoryButton, jobHistoryButtonImage,
          jobHistoryButtonText, jobStrategiesButton, quickActionsCard, quickActionsTitle,
          topLeftGridCard, topRightGridCard, uploadResumeButton, uploadResumeButtonImage,
          uploadResumeButtonText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
