// Generated by view binder compiler. Do not edit!
package com.worksy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textview.MaterialTextView;
import com.worksy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemJobBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton buttonSave;

  @NonNull
  public final Chip chipEmploymentType;

  @NonNull
  public final ShapeableImageView imageViewCompanyLogo;

  @NonNull
  public final MaterialTextView textViewCompanyName;

  @NonNull
  public final MaterialTextView textViewJobTitle;

  @NonNull
  public final MaterialTextView textViewLocation;

  @NonNull
  public final MaterialTextView textViewSalary;

  private ItemJobBinding(@NonNull MaterialCardView rootView, @NonNull MaterialButton buttonSave,
      @NonNull Chip chipEmploymentType, @NonNull ShapeableImageView imageViewCompanyLogo,
      @NonNull MaterialTextView textViewCompanyName, @NonNull MaterialTextView textViewJobTitle,
      @NonNull MaterialTextView textViewLocation, @NonNull MaterialTextView textViewSalary) {
    this.rootView = rootView;
    this.buttonSave = buttonSave;
    this.chipEmploymentType = chipEmploymentType;
    this.imageViewCompanyLogo = imageViewCompanyLogo;
    this.textViewCompanyName = textViewCompanyName;
    this.textViewJobTitle = textViewJobTitle;
    this.textViewLocation = textViewLocation;
    this.textViewSalary = textViewSalary;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemJobBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemJobBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_job, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemJobBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSave;
      MaterialButton buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.chipEmploymentType;
      Chip chipEmploymentType = ViewBindings.findChildViewById(rootView, id);
      if (chipEmploymentType == null) {
        break missingId;
      }

      id = R.id.imageViewCompanyLogo;
      ShapeableImageView imageViewCompanyLogo = ViewBindings.findChildViewById(rootView, id);
      if (imageViewCompanyLogo == null) {
        break missingId;
      }

      id = R.id.textViewCompanyName;
      MaterialTextView textViewCompanyName = ViewBindings.findChildViewById(rootView, id);
      if (textViewCompanyName == null) {
        break missingId;
      }

      id = R.id.textViewJobTitle;
      MaterialTextView textViewJobTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewJobTitle == null) {
        break missingId;
      }

      id = R.id.textViewLocation;
      MaterialTextView textViewLocation = ViewBindings.findChildViewById(rootView, id);
      if (textViewLocation == null) {
        break missingId;
      }

      id = R.id.textViewSalary;
      MaterialTextView textViewSalary = ViewBindings.findChildViewById(rootView, id);
      if (textViewSalary == null) {
        break missingId;
      }

      return new ItemJobBinding((MaterialCardView) rootView, buttonSave, chipEmploymentType,
          imageViewCompanyLogo, textViewCompanyName, textViewJobTitle, textViewLocation,
          textViewSalary);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
