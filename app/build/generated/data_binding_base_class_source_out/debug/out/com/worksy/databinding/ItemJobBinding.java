// Generated by view binder compiler. Do not edit!
package com.worksy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.chip.Chip;
import com.worksy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemJobBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button buttonApplyNow;

  @NonNull
  public final Button buttonUploadResume;

  @NonNull
  public final Chip chipEmploymentType;

  @NonNull
  public final TextView textViewCompanyName;

  @NonNull
  public final TextView textViewExperienceLevel;

  @NonNull
  public final TextView textViewJobDescription;

  @NonNull
  public final TextView textViewJobTitle;

  @NonNull
  public final TextView textViewLocation;

  @NonNull
  public final TextView textViewSalary;

  @NonNull
  public final TextView textViewWorkArrangement;

  @NonNull
  public final TextView textViewWorkSetup;

  private ItemJobBinding(@NonNull CardView rootView, @NonNull Button buttonApplyNow,
      @NonNull Button buttonUploadResume, @NonNull Chip chipEmploymentType,
      @NonNull TextView textViewCompanyName, @NonNull TextView textViewExperienceLevel,
      @NonNull TextView textViewJobDescription, @NonNull TextView textViewJobTitle,
      @NonNull TextView textViewLocation, @NonNull TextView textViewSalary,
      @NonNull TextView textViewWorkArrangement, @NonNull TextView textViewWorkSetup) {
    this.rootView = rootView;
    this.buttonApplyNow = buttonApplyNow;
    this.buttonUploadResume = buttonUploadResume;
    this.chipEmploymentType = chipEmploymentType;
    this.textViewCompanyName = textViewCompanyName;
    this.textViewExperienceLevel = textViewExperienceLevel;
    this.textViewJobDescription = textViewJobDescription;
    this.textViewJobTitle = textViewJobTitle;
    this.textViewLocation = textViewLocation;
    this.textViewSalary = textViewSalary;
    this.textViewWorkArrangement = textViewWorkArrangement;
    this.textViewWorkSetup = textViewWorkSetup;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemJobBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemJobBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_job, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemJobBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonApplyNow;
      Button buttonApplyNow = ViewBindings.findChildViewById(rootView, id);
      if (buttonApplyNow == null) {
        break missingId;
      }

      id = R.id.buttonUploadResume;
      Button buttonUploadResume = ViewBindings.findChildViewById(rootView, id);
      if (buttonUploadResume == null) {
        break missingId;
      }

      id = R.id.chipEmploymentType;
      Chip chipEmploymentType = ViewBindings.findChildViewById(rootView, id);
      if (chipEmploymentType == null) {
        break missingId;
      }

      id = R.id.textViewCompanyName;
      TextView textViewCompanyName = ViewBindings.findChildViewById(rootView, id);
      if (textViewCompanyName == null) {
        break missingId;
      }

      id = R.id.textViewExperienceLevel;
      TextView textViewExperienceLevel = ViewBindings.findChildViewById(rootView, id);
      if (textViewExperienceLevel == null) {
        break missingId;
      }

      id = R.id.textViewJobDescription;
      TextView textViewJobDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewJobDescription == null) {
        break missingId;
      }

      id = R.id.textViewJobTitle;
      TextView textViewJobTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewJobTitle == null) {
        break missingId;
      }

      id = R.id.textViewLocation;
      TextView textViewLocation = ViewBindings.findChildViewById(rootView, id);
      if (textViewLocation == null) {
        break missingId;
      }

      id = R.id.textViewSalary;
      TextView textViewSalary = ViewBindings.findChildViewById(rootView, id);
      if (textViewSalary == null) {
        break missingId;
      }

      id = R.id.textViewWorkArrangement;
      TextView textViewWorkArrangement = ViewBindings.findChildViewById(rootView, id);
      if (textViewWorkArrangement == null) {
        break missingId;
      }

      id = R.id.textViewWorkSetup;
      TextView textViewWorkSetup = ViewBindings.findChildViewById(rootView, id);
      if (textViewWorkSetup == null) {
        break missingId;
      }

      return new ItemJobBinding((CardView) rootView, buttonApplyNow, buttonUploadResume,
          chipEmploymentType, textViewCompanyName, textViewExperienceLevel, textViewJobDescription,
          textViewJobTitle, textViewLocation, textViewSalary, textViewWorkArrangement,
          textViewWorkSetup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
