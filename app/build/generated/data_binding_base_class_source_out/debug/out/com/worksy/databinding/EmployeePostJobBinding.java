// Generated by view binder compiler. Do not edit!
package com.worksy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.radiobutton.MaterialRadioButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.worksy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EmployeePostJobBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final LinearLayout buttonContainer;

  @NonNull
  public final MaterialButton buttonPinLocation;

  @NonNull
  public final MaterialButton buttonPostNow;

  @NonNull
  public final MaterialButton buttonReset;

  @NonNull
  public final TextInputEditText editJobDescription;

  @NonNull
  public final TextInputEditText editTextJobTitle;

  @NonNull
  public final EditText editTextLocation;

  @NonNull
  public final TextInputEditText editTextSalaryRange;

  @NonNull
  public final TextView jobAddPost;

  @NonNull
  public final TextInputLayout jobDescription;

  @NonNull
  public final MaterialRadioButton radioButtonContract;

  @NonNull
  public final MaterialRadioButton radioButtonEntry;

  @NonNull
  public final MaterialRadioButton radioButtonFullTime;

  @NonNull
  public final MaterialRadioButton radioButtonHybrid;

  @NonNull
  public final MaterialRadioButton radioButtonInternship;

  @NonNull
  public final MaterialRadioButton radioButtonMid;

  @NonNull
  public final MaterialRadioButton radioButtonOnSite;

  @NonNull
  public final MaterialRadioButton radioButtonPartTime;

  @NonNull
  public final MaterialRadioButton radioButtonRemote;

  @NonNull
  public final MaterialRadioButton radioButtonSenior;

  @NonNull
  public final RadioGroup radioGroupExperienceLevel;

  @NonNull
  public final RadioGroup radioGroupWorkArrangement;

  @NonNull
  public final RadioGroup radioGroupWorkSetup;

  @NonNull
  public final ScrollView scrollViewForm;

  @NonNull
  public final Spinner spinnerCurrency;

  @NonNull
  public final TextInputLayout textInputLayoutJobTitle;

  @NonNull
  public final TextInputLayout textInputLayoutSalaryRange;

  private EmployeePostJobBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomNavigationView bottomNavigation, @NonNull LinearLayout buttonContainer,
      @NonNull MaterialButton buttonPinLocation, @NonNull MaterialButton buttonPostNow,
      @NonNull MaterialButton buttonReset, @NonNull TextInputEditText editJobDescription,
      @NonNull TextInputEditText editTextJobTitle, @NonNull EditText editTextLocation,
      @NonNull TextInputEditText editTextSalaryRange, @NonNull TextView jobAddPost,
      @NonNull TextInputLayout jobDescription, @NonNull MaterialRadioButton radioButtonContract,
      @NonNull MaterialRadioButton radioButtonEntry,
      @NonNull MaterialRadioButton radioButtonFullTime,
      @NonNull MaterialRadioButton radioButtonHybrid,
      @NonNull MaterialRadioButton radioButtonInternship,
      @NonNull MaterialRadioButton radioButtonMid, @NonNull MaterialRadioButton radioButtonOnSite,
      @NonNull MaterialRadioButton radioButtonPartTime,
      @NonNull MaterialRadioButton radioButtonRemote,
      @NonNull MaterialRadioButton radioButtonSenior, @NonNull RadioGroup radioGroupExperienceLevel,
      @NonNull RadioGroup radioGroupWorkArrangement, @NonNull RadioGroup radioGroupWorkSetup,
      @NonNull ScrollView scrollViewForm, @NonNull Spinner spinnerCurrency,
      @NonNull TextInputLayout textInputLayoutJobTitle,
      @NonNull TextInputLayout textInputLayoutSalaryRange) {
    this.rootView = rootView;
    this.bottomNavigation = bottomNavigation;
    this.buttonContainer = buttonContainer;
    this.buttonPinLocation = buttonPinLocation;
    this.buttonPostNow = buttonPostNow;
    this.buttonReset = buttonReset;
    this.editJobDescription = editJobDescription;
    this.editTextJobTitle = editTextJobTitle;
    this.editTextLocation = editTextLocation;
    this.editTextSalaryRange = editTextSalaryRange;
    this.jobAddPost = jobAddPost;
    this.jobDescription = jobDescription;
    this.radioButtonContract = radioButtonContract;
    this.radioButtonEntry = radioButtonEntry;
    this.radioButtonFullTime = radioButtonFullTime;
    this.radioButtonHybrid = radioButtonHybrid;
    this.radioButtonInternship = radioButtonInternship;
    this.radioButtonMid = radioButtonMid;
    this.radioButtonOnSite = radioButtonOnSite;
    this.radioButtonPartTime = radioButtonPartTime;
    this.radioButtonRemote = radioButtonRemote;
    this.radioButtonSenior = radioButtonSenior;
    this.radioGroupExperienceLevel = radioGroupExperienceLevel;
    this.radioGroupWorkArrangement = radioGroupWorkArrangement;
    this.radioGroupWorkSetup = radioGroupWorkSetup;
    this.scrollViewForm = scrollViewForm;
    this.spinnerCurrency = spinnerCurrency;
    this.textInputLayoutJobTitle = textInputLayoutJobTitle;
    this.textInputLayoutSalaryRange = textInputLayoutSalaryRange;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EmployeePostJobBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EmployeePostJobBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.employee_post_job, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EmployeePostJobBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.buttonContainer;
      LinearLayout buttonContainer = ViewBindings.findChildViewById(rootView, id);
      if (buttonContainer == null) {
        break missingId;
      }

      id = R.id.buttonPinLocation;
      MaterialButton buttonPinLocation = ViewBindings.findChildViewById(rootView, id);
      if (buttonPinLocation == null) {
        break missingId;
      }

      id = R.id.buttonPostNow;
      MaterialButton buttonPostNow = ViewBindings.findChildViewById(rootView, id);
      if (buttonPostNow == null) {
        break missingId;
      }

      id = R.id.buttonReset;
      MaterialButton buttonReset = ViewBindings.findChildViewById(rootView, id);
      if (buttonReset == null) {
        break missingId;
      }

      id = R.id.editJobDescription;
      TextInputEditText editJobDescription = ViewBindings.findChildViewById(rootView, id);
      if (editJobDescription == null) {
        break missingId;
      }

      id = R.id.editTextJobTitle;
      TextInputEditText editTextJobTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTextJobTitle == null) {
        break missingId;
      }

      id = R.id.editTextLocation;
      EditText editTextLocation = ViewBindings.findChildViewById(rootView, id);
      if (editTextLocation == null) {
        break missingId;
      }

      id = R.id.editTextSalaryRange;
      TextInputEditText editTextSalaryRange = ViewBindings.findChildViewById(rootView, id);
      if (editTextSalaryRange == null) {
        break missingId;
      }

      id = R.id.jobAddPost;
      TextView jobAddPost = ViewBindings.findChildViewById(rootView, id);
      if (jobAddPost == null) {
        break missingId;
      }

      id = R.id.jobDescription;
      TextInputLayout jobDescription = ViewBindings.findChildViewById(rootView, id);
      if (jobDescription == null) {
        break missingId;
      }

      id = R.id.radioButtonContract;
      MaterialRadioButton radioButtonContract = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonContract == null) {
        break missingId;
      }

      id = R.id.radioButtonEntry;
      MaterialRadioButton radioButtonEntry = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonEntry == null) {
        break missingId;
      }

      id = R.id.radioButtonFullTime;
      MaterialRadioButton radioButtonFullTime = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonFullTime == null) {
        break missingId;
      }

      id = R.id.radioButtonHybrid;
      MaterialRadioButton radioButtonHybrid = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonHybrid == null) {
        break missingId;
      }

      id = R.id.radioButtonInternship;
      MaterialRadioButton radioButtonInternship = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonInternship == null) {
        break missingId;
      }

      id = R.id.radioButtonMid;
      MaterialRadioButton radioButtonMid = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonMid == null) {
        break missingId;
      }

      id = R.id.radioButtonOnSite;
      MaterialRadioButton radioButtonOnSite = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonOnSite == null) {
        break missingId;
      }

      id = R.id.radioButtonPartTime;
      MaterialRadioButton radioButtonPartTime = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonPartTime == null) {
        break missingId;
      }

      id = R.id.radioButtonRemote;
      MaterialRadioButton radioButtonRemote = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonRemote == null) {
        break missingId;
      }

      id = R.id.radioButtonSenior;
      MaterialRadioButton radioButtonSenior = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonSenior == null) {
        break missingId;
      }

      id = R.id.radioGroupExperienceLevel;
      RadioGroup radioGroupExperienceLevel = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupExperienceLevel == null) {
        break missingId;
      }

      id = R.id.radioGroupWorkArrangement;
      RadioGroup radioGroupWorkArrangement = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupWorkArrangement == null) {
        break missingId;
      }

      id = R.id.radioGroupWorkSetup;
      RadioGroup radioGroupWorkSetup = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupWorkSetup == null) {
        break missingId;
      }

      id = R.id.scrollViewForm;
      ScrollView scrollViewForm = ViewBindings.findChildViewById(rootView, id);
      if (scrollViewForm == null) {
        break missingId;
      }

      id = R.id.spinnerCurrency;
      Spinner spinnerCurrency = ViewBindings.findChildViewById(rootView, id);
      if (spinnerCurrency == null) {
        break missingId;
      }

      id = R.id.textInputLayoutJobTitle;
      TextInputLayout textInputLayoutJobTitle = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutJobTitle == null) {
        break missingId;
      }

      id = R.id.textInputLayoutSalaryRange;
      TextInputLayout textInputLayoutSalaryRange = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutSalaryRange == null) {
        break missingId;
      }

      return new EmployeePostJobBinding((ConstraintLayout) rootView, bottomNavigation,
          buttonContainer, buttonPinLocation, buttonPostNow, buttonReset, editJobDescription,
          editTextJobTitle, editTextLocation, editTextSalaryRange, jobAddPost, jobDescription,
          radioButtonContract, radioButtonEntry, radioButtonFullTime, radioButtonHybrid,
          radioButtonInternship, radioButtonMid, radioButtonOnSite, radioButtonPartTime,
          radioButtonRemote, radioButtonSenior, radioGroupExperienceLevel,
          radioGroupWorkArrangement, radioGroupWorkSetup, scrollViewForm, spinnerCurrency,
          textInputLayoutJobTitle, textInputLayoutSalaryRange);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
